Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


Begin optimization report for: main(int, char **)

    Report from: Vector optimizations [vec]


LOOP BEGIN at harness.c(149,5) inlined into harness.c(61,9)
   remark #15382: vectorization support: call to function fscanf(FILE *__restrict__, const char *__restrict__, ...) cannot be vectorized   [ harness.c(151,13) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between call:fscanf(FILE *__restrict__,  line 151 and call:fscanf(FILE *__restrict__,  line 151
   remark #15346: vector dependence: assumed OUTPUT dependence between call:fscanf(FILE *__restrict__,  line 151 and call:fscanf(FILE *__restrict__,  line 151

   LOOP BEGIN at harness.c(150,9) inlined into harness.c(61,9)
      remark #15527: loop was not vectorized: function call to fscanf(FILE *__restrict__, const char *__restrict__, ...) cannot be vectorized   [ harness.c(151,13) ]
   LOOP END
LOOP END

LOOP BEGIN at harness.c(98,5) inlined into harness.c(66,5)
   remark #15388: vectorization support: reference rad_1229 has aligned access   [ harness.c(99,9) ]
   remark #15305: vectorization support: vector length 8
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 5 
   remark #15477: vector loop cost: 0.370 
   remark #15478: estimated potential speedup: 12.490 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at harness.c(98,5) inlined into harness.c(66,5)
<Remainder loop for vectorization>
   remark #15388: vectorization support: reference rad_1229 has aligned access   [ harness.c(99,9) ]
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.333
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at harness.c(130,5) inlined into harness.c(67,5)
   remark #15527: loop was not vectorized: function call to fscanf(FILE *__restrict__, const char *__restrict__, ...) cannot be vectorized   [ harness.c(131,9) ]
LOOP END

LOOP BEGIN at harness.c(73,5)
   remark #15382: vectorization support: call to function ?1memset cannot be vectorized   [ harness.c(75,13) ]
   remark #15382: vectorization support: call to function rpy_ewald(int, double *, const double *, double, const double *, double, int, int) cannot be vectorized   [ harness.c(78,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between a line 75 and a line 75
   remark #15346: vector dependence: assumed OUTPUT dependence between a line 75 and a line 75

   LOOP BEGIN at harness.c(74,9)
      remark #15398: loop was not vectorized: loop was transformed to memset or memcpy
   LOOP END
LOOP END

LOOP BEGIN at harness.c(160,5) inlined into harness.c(84,20)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at harness.c(161,9) inlined into harness.c(84,20)
   <Peeled loop for vectorization>
      remark #15389: vectorization support: reference a_1241 has unaligned access   [ harness.c(162,47) ]
      remark #15389: vectorization support: reference gold_1241 has unaligned access   [ harness.c(162,47) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 1.162
      remark #15301: PEEL LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at harness.c(161,9) inlined into harness.c(84,20)
      remark #15388: vectorization support: reference a_1241 has aligned access   [ harness.c(162,47) ]
      remark #15388: vectorization support: reference gold_1241 has aligned access   [ harness.c(162,47) ]
      remark #15305: vectorization support: vector length 8
      remark #15399: vectorization support: unroll factor set to 8
      remark #15309: vectorization support: normalized vectorization overhead 0.100
      remark #15300: LOOP WAS VECTORIZED
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 22 
      remark #15477: vector loop cost: 1.870 
      remark #15478: estimated potential speedup: 9.820 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at harness.c(161,9) inlined into harness.c(84,20)
   <Remainder loop for vectorization>
      remark #15388: vectorization support: reference a_1241 has aligned access   [ harness.c(162,47) ]
      remark #15388: vectorization support: reference gold_1241 has aligned access   [ harness.c(162,47) ]
      remark #15388: vectorization support: reference a_1241 has aligned access   [ harness.c(162,47) ]
      remark #15388: vectorization support: reference gold_1241 has aligned access   [ harness.c(162,47) ]
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 1.905
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END
LOOP END

LOOP BEGIN at harness.c(178,5) inlined into harness.c(88,5)
   remark #15382: vectorization support: call to function fprintf(FILE *__restrict__, const char *__restrict__, ...) cannot be vectorized   [ harness.c(180,13) ]
   remark #15382: vectorization support: call to function fprintf(FILE *__restrict__, const char *__restrict__, ...) cannot be vectorized   [ harness.c(183,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between call:fprintf(FILE *__restrict__, line 180 and call:fprintf(FILE *__restrict__, line 183
   remark #15346: vector dependence: assumed OUTPUT dependence between  line 183 and  line 180

   LOOP BEGIN at harness.c(179,9) inlined into harness.c(88,5)
      remark #15527: loop was not vectorized: function call to fprintf(FILE *__restrict__, const char *__restrict__, ...) cannot be vectorized   [ harness.c(180,13) ]
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: populate_radii(int, double *, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at harness.c(98,5)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference rad has unaligned access   [ harness.c(99,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.000
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at harness.c(98,5)
   remark #15388: vectorization support: reference rad has aligned access   [ harness.c(99,9) ]
   remark #15305: vectorization support: vector length 8
   remark #15399: vectorization support: unroll factor set to 4
   remark #15309: vectorization support: normalized vectorization overhead 0.917
   remark #15300: LOOP WAS VECTORIZED
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 5 
   remark #15477: vector loop cost: 0.370 
   remark #15478: estimated potential speedup: 11.450 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at harness.c(98,5)
<Remainder loop for vectorization>
   remark #15388: vectorization support: reference rad has aligned access   [ harness.c(99,9) ]
   remark #15305: vectorization support: vector length 8
   remark #15309: vectorization support: normalized vectorization overhead 1.444
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END
===========================================================================

Begin optimization report for: traj_read(const char *, double *, int, double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at harness.c(130,5)
   remark #15527: loop was not vectorized: function call to fscanf(FILE *__restrict__, const char *__restrict__, ...) cannot be vectorized   [ harness.c(131,9) ]
LOOP END
===========================================================================

Begin optimization report for: gold_read(const char *, int, double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at harness.c(149,5)
   remark #15382: vectorization support: call to function fscanf(FILE *__restrict__, const char *__restrict__, ...) cannot be vectorized   [ harness.c(151,13) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between call:fscanf(FILE *__restrict__,  line 151 and call:fscanf(FILE *__restrict__,  line 151
   remark #15346: vector dependence: assumed OUTPUT dependence between call:fscanf(FILE *__restrict__,  line 151 and call:fscanf(FILE *__restrict__,  line 151

   LOOP BEGIN at harness.c(150,9)
      remark #15527: loop was not vectorized: function call to fscanf(FILE *__restrict__, const char *__restrict__, ...) cannot be vectorized   [ harness.c(151,13) ]
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: compare_gold(int, double *, double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at harness.c(160,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at harness.c(161,9)
   <Peeled loop for vectorization>
      remark #15389: vectorization support: reference a has unaligned access   [ harness.c(162,47) ]
      remark #15389: vectorization support: reference gold has unaligned access   [ harness.c(162,47) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 1.162
      remark #15301: PEEL LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at harness.c(161,9)
      remark #15388: vectorization support: reference a has aligned access   [ harness.c(162,47) ]
      remark #15388: vectorization support: reference gold has aligned access   [ harness.c(162,47) ]
      remark #15305: vectorization support: vector length 8
      remark #15399: vectorization support: unroll factor set to 8
      remark #15309: vectorization support: normalized vectorization overhead 0.133
      remark #15300: LOOP WAS VECTORIZED
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 22 
      remark #15477: vector loop cost: 1.870 
      remark #15478: estimated potential speedup: 9.760 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at harness.c(161,9)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at harness.c(161,9)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference a has unaligned access   [ harness.c(162,47) ]
      remark #15388: vectorization support: reference gold has aligned access   [ harness.c(162,47) ]
      remark #15389: vectorization support: reference a has unaligned access   [ harness.c(162,47) ]
      remark #15388: vectorization support: reference gold has aligned access   [ harness.c(162,47) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 1.739
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: rpy_write(const char *, int, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at harness.c(178,5)
   remark #15382: vectorization support: call to function fprintf(FILE *__restrict__, const char *__restrict__, ...) cannot be vectorized   [ harness.c(180,13) ]
   remark #15382: vectorization support: call to function fprintf(FILE *__restrict__, const char *__restrict__, ...) cannot be vectorized   [ harness.c(183,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between call:fprintf(FILE *__restrict__, line 180 and call:fprintf(FILE *__restrict__, line 183
   remark #15346: vector dependence: assumed OUTPUT dependence between  line 183 and  line 180

   LOOP BEGIN at harness.c(179,9)
      remark #15527: loop was not vectorized: function call to fprintf(FILE *__restrict__, const char *__restrict__, ...) cannot be vectorized   [ harness.c(180,13) ]
   LOOP END
LOOP END
===========================================================================
